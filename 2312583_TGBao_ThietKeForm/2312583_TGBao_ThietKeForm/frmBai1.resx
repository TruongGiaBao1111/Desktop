<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BVAUAKoBQBUf/9k=
</value>
  </data>
</root>